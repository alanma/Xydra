package de.xam.cx.wadl;

import com.sun.javadoc.ClassDoc;
import com.sun.javadoc.MethodDoc;
import com.sun.javadoc.ParamTag;
import com.sun.javadoc.Parameter;
import com.sun.javadoc.Tag;
import com.sun.jersey.server.wadl.generators.resourcedoc.model.ClassDocType;
import com.sun.jersey.server.wadl.generators.resourcedoc.model.MethodDocType;
import com.sun.jersey.server.wadl.generators.resourcedoc.model.ParamDocType;
import com.sun.jersey.wadl.resourcedoc.DocProcessor;


/**
 * This {@link DocProcessor} shows how you can process your custom tags and add
 * them to the generated resourcedoc.xml.<br>
 * Created on: Jul 20, 2008<br>
 * 
 * @author <a href="mailto:martin.grotzke@freiheit.com">Martin Grotzke</a>
 * @version $Id$
 */
public class ExampleDocProcessor implements DocProcessor {
	
	public Class<?>[] getRequiredJaxbContextClasses() {
		return new Class[] { ExampleValue.class };
	}
	
	public String[] getCDataElements() {
		return null;
	}
	
	public void processMethodDoc(MethodDoc methodDoc, MethodDocType methodDocType) {
		final String tagName = "@example.tag";
		final Tag exampleTag = getTag(methodDoc, tagName);
		if(exampleTag != null) {
			ExampleValue ev = new ExampleValue();
			ev.setValue(exampleTag.text());
			methodDocType.getAny().add(ev);
		}
	}
	
	private Tag getTag(MethodDoc methodDoc, final String tagName) {
		for(Tag tag : methodDoc.tags()) {
			if(tagName.equals(tag.name())) {
				return tag;
			}
		}
		return null;
	}
	
	public void processClassDoc(ClassDoc arg0, ClassDocType arg1) {
	}
	
	public void processParamTag(ParamTag arg0, Parameter arg1, ParamDocType arg2) {
	}
	
}
